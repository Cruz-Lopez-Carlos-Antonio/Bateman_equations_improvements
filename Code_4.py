import itertools
import numpy as np
import math
from decimal import*
getcontext().prec=32
import time

def partitions_restricted(m,n,L):
    List = [ ]                                               
    for k in range(m+1):                                                          #Creation of the set  
        List.append(k)
    List2 = [ ]
    
    for k in itertools.product(List,repeat=n):                            #Creation of the set P_n
        a = np.array(k)
        l = np.sum(a)
        if l==m:
            L.append(list(a))
        
def chi(i,j,Mu,Lambd,L):
    c = 0
    for u in L:
        Aux_L = Mu.copy()
        Aux_L.remove(Mu[i])
        Aux2 = Lambd.copy()
        Aux2.remove(Lambd[i])
        a =1
        for k in range(len(Aux_L)):
            b_f = Decimal(math.comb(Aux_L[k]+u[k],Aux_L[k]))
            
            dif = (Decimal(1)/(Decimal(Lambd[i])-Decimal(Aux2[k]))**Decimal(int(u[k])))
            a = a*b_f*dif
        c = c+a
        #print(c)
    return c



def GPS(X0,DC,t):
    global tiempo_total
    term1 = Decimal(X0)/Decimal(DC[-1])
    tiempo_particiones = 0 

    Red_S = set(DC)
    Au1 = list(Red_S)
    Mu = [ ]
    for u in Au1:
        Mu.append(DC.count(u)-1)
    term2 = 1
    for z in range(len(Au1)):
        term2 =term2*(Au1[z]**(Mu[z]+1))
    s1 = 0
    for i in range(len(Au1)):
        p1 = Decimal.exp(-Decimal(Au1[i])*Decimal(t))
        Au2 = Au1.copy()
        Au2.remove(Au1[i])
        Mu_m = Mu.copy()
        Mu_m.remove(Mu[i])
        p2 = Decimal(1)
        for j in range(len(Au2)):
            p2 =p2*(Decimal(1)/((Decimal(Au2[j])-Decimal(Au1[i])))**Decimal((Mu_m[j]+1)))       
        s2 = 0
        for l in range(Mu[i]+1):
            L = [ ]
            z1 = Decimal((t**l))/Decimal(math.factorial(l))
            inicio_particiones = time.time()
            partitions_restricted(Mu[i]-l,len(Au2),L)
            final_particiones = time.time()
            tiempo_total = tiempo_total+final_particiones-inicio_particiones
            z2 = chi(i,Mu[i]-l,Mu,Au1,L)
            s2 = Decimal(s2)+z1*z2


        s1 = Decimal(s1)+Decimal(p1)*p2*s2
    solution = Decimal(term1)*Decimal(term2)*s1
    #print("tiempo total",tiempo_total)
    #print("tiempo particiones",tiempo_total)
    return tiempo_total

D1 = [2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08,
      2.36796128333574e-08, 2.7631716067040335e-09, 
      2.056366212121307e-07,8.931876872185978e-11, 4.699148641219481e-08, 1.3551123266416035e-08, 2.736129E-6,4.336506384884542e-05]
D2 = [2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08,
      2.36796128333574e-08, 2.7631716067040335e-09, 
      2.056366212121307e-07,8.931876872185978e-11, 4.699148641219481e-08, 1.3551123266416035e-08, 2.736129E-6, 8.931876872185978e-11]
D3 = [2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08,
      2.36796128333574e-08, 2.7631716067040335e-09, 
      2.056366212121307e-07,8.931876872185978e-11, 4.699148641219481e-08, 5.445245656444865e-06, 2.158696932550656e-08, 3.96161709612633e-07]
D4 = [2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08,
      2.36796128333574e-08, 2.7631716067040335e-09, 
      2.056366212121307e-07,8.931876872185978e-11, 4.699148641219481e-08, 5.445245656444865e-06, 2.158696932550656e-08, 2.106577689312537e-05]
D5 = [2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08,
      2.36796128333574e-08, 2.7631716067040335e-09, 
      2.056366212121307e-07, 2.8526685355369454e-10, 2.056366212121307e-07, 8.931876872185978e-11, 4.699148641219481e-08, 1.3551123266416035e-08]
D6 = [2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08,
      2.36796128333574e-08, 2.7631716067040335e-09, 
      2.056366212121307e-07,2.8526685355369454e-10, 2.056366212121307e-07, 8.931876872185978e-11, 4.699148641219481e-08, 5.445245656444865e-06]
D7 = [2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08,
      2.36796128333574e-08, 2.7631716067040335e-09, 
      2.056366212121307e-07,2.8526685355369454e-10, 2.056366212121307e-07, 2.8526685355369454e-10, 2.056366212121307e-07, 8.931876872185978e-11]
D8 = [2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08,
      2.36796128333574e-08, 2.7631716067040335e-09, 
      2.056366212121307e-07,2.8526685355369454e-10, 2.056366212121307e-07, 2.8526685355369454e-10, 2.056366212121307e-07, 2.8526685355369454e-10]
D9 = [2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08,
      2.36796128333574e-08, 2.7631716067040335e-09, 
      9.426314172825245e-05,9.889973626158754e-10, 1.6759726358803375e-09, 4.4722033873538023e-11, 6.100432499428726e-07, 7.464905844085441e-10]
D10 = [2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08,
       2.36796128333574e-08, 2.7631716067040335e-09, 
       9.426314172825245e-05,9.889973626158754e-10, 0.00034577867154157575, 4.4722033873538023e-11, 6.100432499428726e-07, 7.464905844085441e-10]
D11 = [2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08,
       2.36796128333574e-08, 2.7631716067040335e-09, 
       9.426314172825245e-05,9.889973626158754e-10, 0.00034577867154157575, 1.3277716385975505e-11, 6.100432499428726e-07, 7.464905844085441e-10]
D12 = [2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08,
       2.36796128333574e-08, 2.7631716067040335e-09, 
       9.426314172825245e-05,9.889973626158754e-10, 0.00034577867154157575, 1.3277716385975505e-11, 0.0030257865402565495, 7.464905844085441e-10]
D13 = [2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08,
       2.36796128333574e-08, 2.7631716067040335e-09, 
       9.426314172825245e-05,0.0001390856441323231, 2.35505e-11, 1.3277716385975505e-11, 6.100432499428726e-07, 7.464905844085441e-10]
D14 = [2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08,
       2.36796128333574e-08, 2.7631716067040335e-09, 
       9.426314172825245e-05,0.0001390856441323231, 2.35505e-11, 1.3277716385975505e-11, 0.0030257865402565495, 7.464905844085441e-10]
D15 = [2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08,
       2.36796128333574e-08, 2.7631716067040335e-09, 
       1.3277716385975505e-11,6.100432499428726e-07, 7.464905844085441e-10, 4.780726304771113e-06, 4.0766511150549346e-10, 0.00011142497797417581]
D16 = [2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08,
       2.36796128333574e-08, 2.7631716067040335e-09, 
       1.3277716385975505e-11,0.0030257865402565495, 7.464905844085441e-10, 4.780726304771113e-06, 4.0766511150549346e-10, 0.00011142497797417581]
D17 = [2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08,
       2.36796128333574e-08, 2.7631716067040335e-09, 
       3.6276926352008307e-06,1.0989776454844388e-23, 5.1397004502434985e-08, 3.0478992556874892e-06, 4.644008033499169e-09, 3.2404334342862915e-07]
D18 = [2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08,
       2.36796128333574e-08, 2.7631716067040335e-09, 
       3.6276926352008307e-06, 1.0989776454844388e-23, 5.1397004502434985e-08, 3.0478992556874892e-06, 7.18440570511718e-05, 1.6302905476168597e-10]
D19 = [2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08,
       2.36796128333574e-08, 2.7631716067040335e-09, 
       3.6276926352008307e-06, 1.0989776454844388e-23, 5.1397004502434985e-08, 3.0478992556874892e-06, 7.18440570511718e-05, 3.0478992556874892e-06]
D20 = [2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08,
       2.36796128333574e-08, 2.7631716067040335e-09, 
       3.6276926352008307e-06,1.0989776454844388e-23, 5.1397004502434985e-08, 1.0644882269318469e-08, 4.644008033499169e-09, 3.2404334342862915e-07]
D21 = [2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08,
       2.36796128333574e-08, 2.7631716067040335e-09, 
       4.4021922728480855e-09,5.087573909504995e-09, 9.889973626158754e-10, 1.6759726358803375e-09, 4.4722033873538023e-11, 6.100432499428726e-07]
D22 = [2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08,
       2.36796128333574e-08, 2.7631716067040335e-09, 
       4.4021922728480855e-09,5.087573909504995e-09, 9.889973626158754e-10, 0.00034577867154157575, 4.4722033873538023e-11, 6.100432499428726e-07]
D23 = [2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08,
       2.36796128333574e-08, 2.7631716067040335e-09, 
       4.4021922728480855e-09,5.087573909504995e-09, 9.889973626158754e-10, 0.00034577867154157575, 1.3277716385975505e-11, 6.100432499428726e-07]
D24 = [2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08,
       2.36796128333574e-08, 2.7631716067040335e-09, 
       4.4021922728480855e-09,5.087573909504995e-09, 9.889973626158754e-10, 0.00034577867154157575, 1.3277716385975505e-11, 0.0030257865402565495]
D25 = [2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08,
       2.36796128333574e-08, 2.7631716067040335e-09, 
       1.540751276617788e-06,3.8653343941402714e-11, 9.481500997564848e-09, 4.4021922728480855e-09, 5.087573909504995e-09, 9.889973626158754e-10]
D26 = [2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08,
       2.36796128333574e-08, 2.7631716067040335e-09, 
       1.540751276617788e-06,3.8653343941402714e-11, 9.481500997564848e-09, 1.838694874469386e-11, 9.426314172825245e-05, 9.889973626158754e-10]
D27 = [2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08, 2.7631716067040335e-09, 2.36796128333574e-08,
       2.36796128333574e-08, 2.7631716067040335e-09, 
       1.540751276617788e-06, 3.8653343941402714e-11, 9.481500997564848e-09, 1.838694874469386e-11, 9.426314172825245e-05, 0.0001390856441323231]
D=[D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15,D16,D17,D18,D19,D20,D21,D22,D23,D24,D25,D26,D27]

lista_de_listas = []

for z in range(len(D)):
    lista_copia = [ ]

    mean =0
    tiempo_total =0
    
    for omega in range(len(D[z])-7):
            for k in range(30):
                solucion = GPS(1.92431E-4,D[z][:7+omega],300*24*3600)
                mean = mean+solucion
            lista_copia.append(mean/30)
    lista_de_listas.append(lista_copia.copy())

for h in range(len(lista_de_listas)):
    print(lista_de_listas[h])
